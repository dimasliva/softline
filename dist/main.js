(()=>{"use strict";var __webpack_modules__={68:()=>{eval('\n;// CONCATENATED MODULE: ./src/js/Header/func.js\nfunction createHeader() {\n  // create a new div element\n  const container = document.createElement("div");\n  const logo = document.createElement("span");\n  \n  const nav = document.createElement("div");\n  const ul = document.createElement("div");\n\n  const linkOne = document.createElement("span");\n  const linkTwo = document.createElement("span");\n  const linkThree = document.createElement("span");\n  const linkFour = document.createElement("span");\n  // and give it some content\n  linkOne.innerHTML = "Облачные решения"\n  linkTwo.innerHTML = "Кибербезопасность"\n  linkThree.innerHTML = "Импортозамещение"\n  linkFour.innerHTML = "Цифровая трансформация"\n  // add the text node to the newly created div\n  container.classList.add("header_navbar")\n  nav.classList.add("navbar")\n  logo.classList.add("logo")\n  ul.classList.add("ul")\n  linkOne.classList.add("li")\n  linkTwo.classList.add("li")\n  linkThree.classList.add("li")\n  linkFour.classList.add("li")\n  \n  \n  ul.appendChild(linkOne);\n  ul.appendChild(linkTwo);\n  ul.appendChild(linkThree);\n  ul.appendChild(linkFour);\n  nav.appendChild(ul);\n  container.appendChild(logo);\n  container.appendChild(nav);\n  // add the newly created element and its content into the DOM\n  return container\n}\n\n;// CONCATENATED MODULE: ./src/js/HeadBlock/func.js\nfunction createHeadBlock() {\n  // create a new div element\n  const container = document.createElement("div");\n  const title = document.createElement("div");\n\n  const pOne = document.createElement("div");\n  const pTwo = document.createElement("div");\n  const pThree = document.createElement("div");\n\n  const button = document.createElement("button");\n\n  button.onclick = toPage\n  // and give it some content\n  button.innerHTML = "На сайт"\n  pOne.innerHTML = "Поставщик услуг цифровой"\n  pTwo.innerHTML = "трансформации"\n  pThree.innerHTML = "и кибербезопасности"\n  // add the text node to the newly created div\n\n  container.classList.add("head_block")\n  title.classList.add("title")\n  button.classList.add("btn")\n  \n  title.appendChild(pOne)\n  title.appendChild(pTwo)\n  title.appendChild(pThree)\n\n  container.appendChild(title);\n  container.appendChild(button);\n  // add the newly created element and its content into the DOM\n  return container\n}\nfunction toPage() {\n  window.open(\'https://softline.ru\', \'_blank\');\n}\n;// CONCATENATED MODULE: ./src/js/AboutBlock/func.js\nfunction createAboutBlock() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const text = document.createElement("div");\n\n  const company = document.createElement("span");\n  const about = document.createElement("span");\n\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n  const pFour = document.createElement("p");\n\n  // and give it some content]\n  company.innerHTML = "Softline"\n  about.innerHTML = " – ведущий поставщик IT-решений и сервисов.*"\n  pTwo.innerHTML = " Мы предлагаем комплексные IT-решения, облака, программное"\n  pThree.innerHTML = "и аппаратное обеспечение, решения по цифровой трансформации"\n  pFour.innerHTML = "и кибербезопасности, а также широкий спектр IT-услуг."\n  // add the text node to the newly created div\n  container.classList.add("about_container")\n  text.classList.add("about")\n  company.classList.add("company")\n  \n  \n  pOne.appendChild(company);\n  pOne.appendChild(about);\n\n  text.appendChild(pOne);\n  text.appendChild(pTwo);\n  text.appendChild(pThree);\n  text.appendChild(pFour);\n\n  container.appendChild(text);\n  // add the newly created element and its content into the DOM\n  return container\n}\n\n;// CONCATENATED MODULE: ./src/js/statsBlock/func.js\nfunction createStatsBlock() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const blocksTop = document.createElement("div");\n  const blocksBottom = document.createElement("div");\n\n  const yearBlock = document.createElement("div");\n  const yearHead = document.createElement("div");\n  const yearDesc = document.createElement("span");\n\n  const employersBlock = document.createElement("div");\n  const employerHead = document.createElement("div");\n  const employerDesc = document.createElement("span");\n  \n  const cityBlock = document.createElement("div");\n  const cityHead = document.createElement("div");\n  const cityDesc = document.createElement("span");\n  \n  const developersBlock = document.createElement("div");\n  const developerHead = document.createElement("div");\n  const developerDesc = document.createElement("span");\n\n  const studyBlock = document.createElement("div");\n  const studyHead = document.createElement("div");\n  const studyDesc = document.createElement("span");\n\n  const studyDescPOne = document.createElement("p");\n  const studyDescPTwo = document.createElement("p");\n\n\n  // and give it some content\n  yearHead.innerHTML = "> 30 лет"\n  yearDesc.innerHTML = "на IT-рынке"\n\n  employerHead.innerHTML = "4600"\n  employerDesc.innerHTML = "сотрудников в России"\n\n  cityHead.innerHTML = "25"\n  cityDesc.innerHTML = "городов России"\n\n  developerHead.innerHTML = "2000 +"\n  developerDesc.innerHTML = "разработчиков"\n\n  studyHead.innerHTML = "3000 +"\n  studyDescPOne.innerHTML = "сотрудников ежегодно"\n  studyDescPTwo.innerHTML = "проходят оценку и обучение"\n  \n  // add the text node to the newly created div\n\n  container.classList.add("study_container")\n\n  blocksTop.classList.add(...["top_block", "blocks"])\n  blocksBottom.classList.add(...["bottom_block", "blocks"])\n\n  yearBlock.classList.add(...["year", "block"])\n  employersBlock.classList.add(...["employer", "block"])\n  cityBlock.classList.add(...["city", "block"])\n  developersBlock.classList.add(...["developer", "block"])\n  studyBlock.classList.add(...["study", "block"])\n  \n  studyDesc.appendChild(studyDescPOne)\n  studyDesc.appendChild(studyDescPTwo)\n\n  yearBlock.appendChild(yearHead)\n  yearBlock.appendChild(yearDesc)\n\n  employersBlock.appendChild(employerHead)\n  employersBlock.appendChild(employerDesc)\n\n  cityBlock.appendChild(cityHead)\n  cityBlock.appendChild(cityDesc)\n\n  developersBlock.appendChild(developerHead)\n  developersBlock.appendChild(developerDesc)\n\n  studyBlock.appendChild(studyHead)\n  studyBlock.appendChild(studyDesc)\n\n  blocksTop.appendChild(yearBlock)\n  blocksTop.appendChild(employersBlock)\n  blocksTop.appendChild(cityBlock)\n\n  blocksBottom.appendChild(developersBlock)\n  blocksBottom.appendChild(studyBlock)\n\n\n  container.appendChild(blocksTop);\n  container.appendChild(blocksBottom);\n  // add the newly created element and its content into the DOM\n  return container\n}\n;// CONCATENATED MODULE: ./src/js/Map/Variables/regions.js\n  \n  const regionMoscow = [{name: "moscow", title: \'Москва\', region: "moscow"}]\n  const regionCenter = [\n    {name: "center", title: \'Центр\', region: "center" },\n    {name: "volonez", title: \'Воронеж\', region: "center" },\n    {name: "yaroslav", title: \'Ярославль\', region: "center" },\n    {name: "belgorod", title: \'Белгород\', region: "center" },\n  ]\n  const regionWest = [\n    {name: "northWest", title: \'Северо-Запад\', region: "west" },\n    {name: "sanktPeter", title: \'Санкт-Петербург\', region: "west" },\n    {name: "kaliningrad", title: \'Калининград\', region: "west" },\n  ]\n  const regionSouth = [\n    {name: "south", title: \'Юг\', region: "south" },\n    {name: "rostovNaDony", title: \'Ростов-на-Дону\', region: "south" },\n    {name: "krasnodar", title: \'Краснодар\', region: "south" },\n    {name: "volgograd", title: \'Волгоград\', region: "south" },\n  ]\n  const regionVolga = [\n    {name: "volga", title: \'Волга\', region: "volga" },\n    {name: "kazan", title: \'Казань\', region: "volga" },\n    {name: "samara", title: \'Самара\', region: "volga" },\n    {name: "ufa", title: \'Уфа\', region: "volga" },\n    {name: "orenburg", title: \'Оренбург\', region: "volga" },\n    {name: "downNovgorod", title: \'Нижний Новгород\', region: "volga" },\n  ]\n  const regionUral = [\n    {name: "ural", title: \'Урал\', region: "ural" },\n    {name: "ekb", title: \'Екатеринбург\', region: "ural" },\n    {name: "chelabinsk", title: \'Челябинск\', region: "ural" },\n    {name: "perm", title: \'Пермь\', region: "ural" },\n    {name: "surgut", title: \'Сургут\', region: "ural" },\n    {name: "tumen", title: \'Тюмень\', region: "ural" },\n    {name: "izewsk", title: \'Ижевск\', region: "ural" },\n  ]\n  const regionSiberia = [\n    {name: "sibir", title: \'Сибирь\', region: "siberia" },\n    {name: "nowosib", title: \'Новосибирск\', region: "siberia" },\n    {name: "omsk", title: \'Омск\', region: "siberia" },\n    {name: "tomsk", title: \'Томск\', region: "siberia" },\n    {name: "krasnoyarsk", title: \'Красноярск\', region: "siberia" },\n    {name: "irkutsk", title: \'Иркутск\', region: "siberia" },\n  ]\n  const regionEast = [\n    {name: "farEast", title: \'Дальний восток\', region: "east" },\n    {name: "habarovsk", title: \'Хабаровск\', region: "east" },\n    {name: "vladivostok", title: \'Владивосток\', region: "east" },\n  ]\n  const pointsArr = [...[...regionMoscow, ...regionCenter, ...regionWest, ...regionSouth, ...regionVolga, ...regionUral, ...regionSiberia, ...regionEast], ]\n\n;// CONCATENATED MODULE: ./src/js/Map/map.js\n\n\nfunction createMapBlock() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const map = document.createElement("div");\n  const points = document.createElement("div");\n\n  createPoints(pointsArr, points)\n  // and give it some content\n\n  // add the text node to the newly created div\n  container.classList.add("map_block")\n\n  map.classList.add("map")\n  points.classList.add("points")\n  \n  container.appendChild(points);\n\n  container.appendChild(map);\n  // add the newly created element and its content into the DOM\n  return container\n}\nfunction createPoints(points, pointsContainer) {\n  let newPoint = []\n  let titleSpan = []\n  points.forEach((point, i) => {\n    if( i !== 1 && i !== 5 && i !== 8 && i !== 12 && i !== 18 && i !== 25 && i !== 31) {\n      newPoint[i] = point;\n      newPoint[i] = document.createElement("div")\n      titleSpan[i] = document.createElement("span")\n      \n      titleSpan[i].innerHTML = point.title\n      newPoint[i].classList.add(point.name)\n      newPoint[i].classList.add(point.region)\n      newPoint[i].classList.add("show")\n      newPoint[i].classList.add("point")\n      titleSpan[i].classList.add("name")\n      newPoint[i].appendChild(titleSpan[i])\n  \n      createDotPoint(point, newPoint[i])\n      pointsContainer.appendChild(newPoint[i])\n    }\n\n  });\n}\nfunction createDotPoint(point, pointContainer) {\n    point = document.createElement("span")\n    point.classList.add("dot")\n\n    pointContainer.appendChild(point)\n}\n;// CONCATENATED MODULE: ./src/js/Map/Modal/func.js\n\n\nfunction createModal() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const countries = document.createElement("div");\n\n  createColumn(\n    [regionMoscow,regionCenter,regionWest,regionSouth,regionVolga,regionUral,regionSiberia,regionEast], \n    countries\n  )\n\n  // and give it some content\n\n  // add the text node to the newly created div\n  container.classList.add("map_modal")\n\n  countries.classList.add("regions")\n\n  // add the newly created element and its content into the DOM\n  container.appendChild(countries)\n\n  return container\n}\nfunction createColumn(arr, countries){\n  let regions = []\n  arr.forEach((contry, i) => {\n    regions[i] = document.createElement("div")\n    regions[i].classList.add("column")\n    \n    createRegions(contry, regions[i])\n    countries.appendChild(regions[i])\n  });\n}\nfunction createRegions(arr, countries) {\n  let regions = [];\n\n  for (var i = 0; i <= arr.length - 1; ++i) {\n    regions[i] = arr[i];\n    regions[i] = document.createElement("span")\n    regions[i].innerHTML = arr[i].title\n    regions[i].classList.add("contry")\n    if(i === 0) {\n      regions[i].classList.add("region")\n    }\n\n    countries.appendChild(regions[i])\n  }\n\n  return countries;\n}\n;// CONCATENATED MODULE: ./src/js/Map/navbar.js\n\n\nfunction createNavbar() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const left = document.createElement("div");\n  const right = document.createElement("div");\n  \n  const logo = document.createElement("span");\n  const arrow = document.createElement("span");\n  \n  const nav = document.createElement("div");\n  const ul = document.createElement("div");\n\n  const arr = [\'Все\', \'Москва\', \'Центр\', \'Северо-Запад\', \'Юг\', \'Волга\', \'Урал\', \'Сибирь\', \'Дальний восток\']\n\n  createVariables(arr, ul)\n  left.addEventListener(\'click\', function handleClick(event) {\n    clickOffice(left, event)\n  });\n\n  // and give it some content\n  logo.innerHTML = "Офисы Softline"\n  // add the text node to the newly created div\n  container.classList.add("map_navbar")\n\n  left.classList.add("left")\n  right.classList.add("right")\n\n  arrow.classList.add("arrow")\n  logo.classList.add("logo")\n\n  nav.classList.add("nav")\n  ul.classList.add("ul")\n\n  nav.appendChild(ul);\n  right.appendChild(nav)\n\n  left.appendChild(logo);\n  left.appendChild(arrow);\n\n  container.appendChild(left);\n  container.appendChild(right);\n  // add the newly created element and its content into the DOM\n  return container\n}\n\nfunction clickCountry(countries, event) {\n  closeModal()\n\n  countries.forEach(element => {\n    element.classList.remove("active")\n  });\n  \n  hideCountry(event.target)\n\n  event.target.classList.add(\'active\');\n}\n\nfunction hideCountry(country) {\n  if(country.textContent === "Все") {\n    showAllCountry()\n    return\n  }\n  hideAllContry()\n  showClickedCountry(country)\n}\nfunction hideAllContry() {\n  let hideRegions = document.getElementsByClassName("point")\n      \n  for (let i = 0; i < hideRegions.length; i++) {\n    const element = hideRegions[i];\n    element.classList.remove("show")\n  }\n}\nfunction showAllCountry() {\n  let showAll = document.getElementsByClassName("point")\n    for (let index = 0; index < showAll.length; index++) {\n      const element = showAll[index];\n      element.classList.add("show")\n    }\n    return\n}\nfunction showClickedCountry(country) {\n  pointsArr.forEach(val => {\n    if(country.outerText === val.title) {\n      let regions = document.getElementsByClassName(val.region)\n      \n      for (let i = 0; i < regions.length; i++) {\n        const element = regions[i];\n        element.classList.add("show")\n      }\n    }\n  })\n}\n\nfunction clickOffice(office, event) {\n  let modal = document.getElementsByClassName("map_modal").item(0)\n  console.log(modal)\n  if(office.classList.contains(\'active\')) {\n    modal.classList.remove(\'open\')\n    office.classList.remove(\'active\');\n    return\n  }\n  modal.classList.add(\'open\')\n  office.classList.add(\'active\');\n}\n\nfunction closeModal() {\n  let left = document.getElementsByClassName(\'left\').item(0)\n  let modal = document.getElementsByClassName("map_modal").item(0)\n  modal.classList.remove(\'open\')\n  left.classList.remove("active")\n}\nfunction createVariables(arr, ul){\n  let countries = [];\n\n  for (var i = 0; i <= arr.length - 1; ++i) {\n    countries[i] = arr[i];\n    countries[i] = document.createElement("span")\n    countries[i].innerHTML = arr[i]\n    countries[i].classList.add("li")\n    if(i === 0) {\n      countries[i].classList.add("active")\n    }\n    countries[i].addEventListener(\'click\', function handleClick(event) {\n\n\n      clickCountry(countries, event)\n    });\n    ul.appendChild(countries[i])\n  }\n\n  return ul;\n}\n;// CONCATENATED MODULE: ./src/js/Map/func.js\n\n\n\n\nfunction createMap() {\n  // create a new div element\n  const container = document.createElement("div");\n  const navbar = createNavbar() \n  const modal = createModal()\n  const map = createMapBlock()\n\n  container.classList.add("map_container")\n\n  container.appendChild(navbar);\n  container.appendChild(modal);\n  container.appendChild(map);\n  // add the newly created element and its content into the DOM\n  return container\n}\n;// CONCATENATED MODULE: ./src/js/mission/func.js\nfunction createMission() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const title = document.createElement("div");\n  const desc = document.createElement("div");\n\n  const pOne = document.createElement("div");\n  const pTwo = document.createElement("div");\n\n  // and give it some content\n  title.innerHTML = "Миссия Softline"\n\n  pOne.innerHTML = "Мы помогаем организациям трансформироваться, работать эффективно и безопасно"\n  pTwo.innerHTML = "в условиях цифровой экономики."\n  \n  // add the text node to the newly created div\n\n  container.classList.add("mission_block")\n\n  title.classList.add("title")\n  desc.classList.add("desc")\n  \n  desc.appendChild(pOne)\n  desc.appendChild(pTwo)\n\n  container.appendChild(title)\n  container.appendChild(desc)\n\n  // add the newly created element and its content into the DOM\n  return container\n}\n;// CONCATENATED MODULE: ./src/js/Direction/func.js\nfunction createDirectionBlock() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const title = document.createElement("div");\n  const blocks = document.createElement("div");\n\n  // and give it some content]\n  title.innerHTML = "Направления бизнеса"\n\n  // add the text node to the newly created div\n  container.classList.add("direction_block")\n  title.classList.add("title")\n  blocks.classList.add("blocks")\n\n  createSolve(blocks)\n  createCyber(blocks)\n  createImport(blocks)\n  createSky(blocks)\n  createDigital(blocks)\n  createSupport(blocks)\n\n  container.appendChild(title);\n  container.appendChild(blocks);\n  // add the newly created element and its content into the DOM\n  return container\n}\nfunction createSolve(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n  const pFour = document.createElement("p");\n\n  pOne.innerHTML = "ГК Softline предлагает клиентам собственную линейку оборудования"\n  pTwo.innerHTML = "(ПК, серверы, торговое оборудование и проч.), разработку"\n  pThree.innerHTML = "программных продуктов, облачных решений, решений в области"\n  pFour.innerHTML = "информационной безопасности."\n  createBlock(\n    \'Решение Softline\', \n    [pOne, pTwo, pThree, pFour],\n    \'solve\',\n    blocks\n  )\n}\nfunction createCyber(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n\n  pOne.innerHTML = "Softline обладает всеми необходимыми государственными лицензиями"\n  pTwo.innerHTML = "для организации проектов по информационной безопасности и "\n  pThree.innerHTML = "аттестации. "\n  createBlock(\n    \'Кибербезопасность\', \n    [pOne, pTwo, pThree],\n    \'cyber\',\n    blocks\n  )\n}\nfunction createSky(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n\n  pOne.innerHTML = "Softline использует современные облачные решения как российских, "\n  pTwo.innerHTML = "так и международных вендоров для масштабирования бизнеса своих"\n  pThree.innerHTML = "клиентов. Подписки, услуги, трансформация."\n  createBlock(\n    \'Облачные решения\', \n    [pOne, pTwo, pThree],\n    \'sky\',\n    blocks\n  )\n}\nfunction createDigital(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n\n  pOne.innerHTML = "Softline использует современные технологи и новые возможности для"\n  pTwo.innerHTML = " увеличения производительности бизнеса заказчика. В штате ГК Softline"\n  pThree.innerHTML = "- 2000+ разработчиков, которые трансформируют ПО под нужды"\n  pThree.innerHTML = "конкретного предприятия."\n  createBlock(\n    \'Цифровая трансформация и разработка ПО\', \n    [pOne, pTwo, pThree],\n    \'digital\',\n    blocks\n  )\n}\nfunction createSupport(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n\n  pOne.innerHTML = "200+ инженеров, 24 часа в сутки, 7 дней в неделю, 12 месяцев в году,"\n  pTwo.innerHTML = " сервисное партнерство с 30+ мировыми производителями."\n  createBlock(\n    \'Техническая поддержка Softline\', \n    [pOne, pTwo, pThree],\n    \'support\',\n    blocks\n  )\n}\nfunction createImport(blocks) {\n  const pOne = document.createElement("p");\n  const pTwo = document.createElement("p");\n  const pThree = document.createElement("p");\n\n  pOne.innerHTML = "ГК Softline обладает широчайшим портфелем решений и услуг для"\n  pTwo.innerHTML = "импортозамещения, включая ПО и оборудование собственного"\n  pThree.innerHTML = "производства."\n  createBlock(\n    \'Импортозамещение\', \n    [pOne, pTwo, pThree],\n    \'import\',\n    blocks\n  )\n}\n\nfunction createBlock(title, desc, nameBlock, blocks) {\n  const block = document.createElement("div");\n\n  const titleContainer = document.createElement("div");\n  const descContainer = document.createElement("div");\n\n  const titleText = document.createElement("span")\n  const descText = document.createElement("span")\n\n  titleText.innerHTML = title\n\n  block.classList.add(...["block", nameBlock])\n\n  titleContainer.classList.add("title_container")\n  titleText.classList.add("title")\n  \n  descContainer.classList.add("desc_container")\n  descText.classList.add("desc")\n\n  titleContainer.appendChild(titleText);\n\n  desc.forEach(element => {\n    element.classList.add("desc")\n    descContainer.appendChild(element);\n  });\n\n  titleContainer.appendChild(descContainer);\n  block.appendChild(titleContainer);\n\n  blocks.appendChild(block);\n  return block\n}\n;// CONCATENATED MODULE: ./src/js/Compensation/func.js\nfunction createCompensation() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const title = document.createElement("div");\n\n  const packages = document.createElement("div");\n  const line = document.createElement("div");\n  \n  const motivateBlock = document.createElement("div");\n\n  const motivateTitle = document.createElement("div");\n  const motivateTitlePOne = document.createElement("div");\n  const motivateTitlePTwo = document.createElement("div");\n  \n\n  // and give it some content]\n  title.innerHTML = "Компенсационный пакет"\n  motivateTitlePOne.innerHTML = "Программа дополнительной мотивации"\n  motivateTitlePTwo.innerHTML = "доплата 12% от суммы"\n\n  // add the text node to the newly created div\n  container.classList.add("compensation_block")\n\n  title.classList.add("title")\n  packages.classList.add("packages")\n\n  motivateBlock.classList.add(...["packages", "motivate"])\n  line.classList.add("line")\n  \n  motivateTitle.classList.add("titles")\n  motivateTitlePTwo.classList.add("hot")\n\n  createPackages(packages)\n  createMotivation(motivateBlock)\n\n  motivateTitle.appendChild(motivateTitlePOne);\n  motivateTitle.appendChild(motivateTitlePTwo);\n\n  container.appendChild(title);\n  container.appendChild(packages);\n  container.appendChild(line);\n  container.appendChild(motivateTitle);\n  container.appendChild(motivateBlock);\n\n\n  // add the newly created element and its content into the DOM\n  return container\n}\nfunction createPackages(packages) {\n  createPackage([\'ДМС\'], "dms", packages)\n  createPackage([\'Выходной\', \'в день рождение\'], "dayoff", packages)\n  createPackage(["Корпоративная", "мобильная связь"], "mobile", packages)\n  createPackage(["Корпоративные скидки", "на спорт"], "sales", packages)\n  createPackage([\'LTI\'], "lti", packages)\n}\nfunction createMotivation(container) {\n  createPackage([\'Оргтехники\'], "orgtex", container)\n  createPackage([\'ДМС\'], "dms", container)\n  createPackage([\'Ипотеки\'], "mortgage", container)\n}\nfunction createPackage(titles, iconName, container) {\n  const pack = document.createElement("div");\n  const titleContainer = document.createElement("div");\n  const icon = document.createElement("div");\n\n  titleContainer.classList.add("titles")\n  icon.classList.add(...["icon", iconName])\n  pack.classList.add("package")\n\n  let title = []\n  for (let i = 0; i < titles.length; i++) {\n    title[i] = titles[i];\n    title[i] = document.createElement("div")\n    title[i].classList.add("name")\n    title[i].innerHTML = titles[i]\n    titleContainer.appendChild(title[i]);\n  }\n  pack.appendChild(icon);\n  pack.appendChild(titleContainer);\n  \n  container.appendChild(pack);\n}\n;// CONCATENATED MODULE: ./src/js/Life/func.js\nfunction createLife() {\n  // create a new div element\n  const container = document.createElement("div");\n\n  const header = document.createElement("div");\n  const title = document.createElement("div");\n\n  const btns = document.createElement("div");\n  const btnLeft = document.createElement("span");\n  const btnRight = document.createElement("span");\n\n  const slideContainer = document.createElement("div");\n  const slideFooter = document.createElement("div");\n\n  createFooterSlider(5, slideFooter, slideContainer)\n  \n  btnLeft.addEventListener(\'click\', function handleClick(event) {\n    btnClick(false, container, slideContainer)\n  });\n\n  btnRight.addEventListener(\'click\', function handleClick(event) {\n    btnClick(true, container, slideContainer)\n  });\n  // and give it some content\n  title.innerHTML = "Корпоративная жизнь"\n\n  // add the text node to the newly created div\n\n  container.classList.add("life_block")\n\n  header.classList.add("header")\n  title.classList.add("title")\n\n  btns.classList.add("btns")\n  btnLeft.classList.add(...["btn", "left"])\n  btnRight.classList.add(...["btn", "right"])\n  \n  slideContainer.classList.add(...["slide", \'num\' + 0])\n  slideFooter.classList.add("footer")\n\n  btns.appendChild(btnLeft)\n  btns.appendChild(btnRight)\n\n  header.appendChild(title)\n  header.appendChild(btns)\n\n  container.appendChild(header)\n  container.appendChild(slideContainer)\n  container.appendChild(slideFooter)\n\n  // add the newly created element and its content into the DOM\n  return container\n}\n\nfunction createFooterSlider(num, container, slideContainer) {\n  const slideBlocks = []\n\n  for (let i = 0; i < num; i++) {\n    slideBlocks[i] = document.createElement("div");\n    if(i === 0) {\n      slideBlocks[i].classList.add("active")\n    }\n    slideBlocks[i].classList.add("block")\n    slideBlocks[i].addEventListener(\'click\', function handleClick(event) {\n      slidesHide(slideBlocks)\n      slideBlocks[i].classList.add("active")\n      setSlide(i, slideContainer)\n      console.log(i)\n    });\n    container.appendChild(slideBlocks[i])\n    \n  }\n}\nfunction slidesHide(slides) {\n  slides.forEach(element => {\n    element.classList.remove("active")\n  });\n}\nfunction btnClick(next, container, slideContainer) {\n  let footer = container.getElementsByClassName("block")\n  let elements = []\n  for (let i = 0; i < footer.length; i++) {\n    elements[i] = footer[i];\n    if(elements[i].classList.contains("active")) {\n      var currentNumSlide = i\n      footer[i].classList.remove("active")\n      slideContainer.classList.remove(\'num\' + currentNumSlide)\n    }\n  }\n  if(next) {\n    nextSlide(footer, currentNumSlide, slideContainer)\n  } else {\n    lastSlide(footer, currentNumSlide, slideContainer)\n  }\n  \n} \n\nfunction nextSlide(footer, currentNumSlide, slideContainer) {\n  let nextNum = currentNumSlide + 1\n  if(footer[nextNum]) {\n    footer[nextNum].classList.add("active")\n    setSlide(nextNum, slideContainer)\n  } else {\n    footer[0].classList.add("active")\n    setSlide(0, slideContainer)\n  }\n}\nfunction lastSlide(footer, currentNumSlide, slideContainer) {\n  let lastNum = currentNumSlide - 1\n  let lastElement = footer.length - 1\n  if(footer[lastNum]) {\n    footer[lastNum].classList.add("active")\n    setSlide(lastNum, slideContainer)\n  } else {\n    footer[lastElement].classList.add("active")\n    setSlide(lastElement, slideContainer)\n  }\n}\n\nfunction setSlide(num, container) {\n  for (let i = 0; i < 5; i++) {\n   container.classList.remove(\'num\' + i)\n    \n  }\n  container.classList.add(\'num\' + num)\n}\n;// CONCATENATED MODULE: ./src/js/index.js\n\n\n\n\n\n\n\n\n\n\nwindow.onload = insertDom()\n\nfunction insertDom() {\n  let appendBlocks = [\n    createHeader(),\n    createHeadBlock(),\n    createAboutBlock(),\n    createStatsBlock(),\n    createMap(),\n    createMission(),\n    createDirectionBlock(),\n    createCompensation(),\n    createLife(),\n  ] \n\n  const currentDiv = document.getElementById("app");\n  appendBlock(currentDiv, appendBlocks)\n}\n\nfunction appendBlock(currentDiv, blocks) {\n  blocks.forEach(block => {\n    currentDiv.append(block)\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///68\n')}},__webpack_exports__={};__webpack_modules__[68]()})();